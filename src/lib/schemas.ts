import { z } from 'zod'
export const PlayerSchema = z.object({
  id: z.number(),
  name: z.string(),
  age: z.number(),
  jersey_number: z.number(),
  place_of_birth: z.string(),
  place_of_birth_flag: z.string(),
  date_of_birth: z.string(),
  height: z.string(),
  citizenship: z.array(z.string()).or(z.string()),
  citizenship_flag: z.array(z.string()).or(z.string()),
  headshot: z.string(),
  club: z.string(),
  club_logo: z.string(),
  main_position: z.string(),
  other_postions: z.array(z.string()).or(z.null()),
  national_team: z.string(),
  national_team_flag: z.string(),
  caps: z.number(),
  international_goals: z.number(),
  market_value: z.string(),
  league_name: z.string(),
  league_level: z.string(),
  league_logo: z.string(),
  joined_date: z.string(),
  contract_expires: z.string(),
  agency_info: z.object({
    name: z.string(),
    agency: z.string(),
    agent_phone: z.string(),
    agent_email: z.string(),
  }),
  club_stats: z.object({
    clubs: z.array(z.string()),
    joined_date: z.array(z.string()),
    appearances: z.array(z.number()),
    goals: z.array(z.string()).or(z.array(z.number())),
    assists: z.optional(z.array(z.number()).or(z.array(z.string()))),
    cleansheets: z.optional(z.array(z.string()).or(z.array(z.number()))),
    mins: z.array(z.string()),
    club_logo: z.array(z.string()),
  }),
  national_team_stats: z.object({
    appearances: z.array(z.number()),
    goals: z.array(z.number()),
    debut: z.array(z.string()),
    age_at_debut: z.array(z.string()),
    national_team: z.array(z.string()),
    teams_flag: z.array(z.string()),
  }),
  current_seasons_stats: z.object({
    competions: z.array(z.string()),
    appearances: z.array(z.number()).or(z.array(z.string())),
    mins: z.array(z.string()),
    goals: z.array(z.string()),
    assists: z.optional(z.array(z.string())),
    cleansheets: z.optional(z.array(z.string())),
    yellow_cards: z.array(z.number()).or(z.array(z.string())),
    second_yellow_cards: z.array(z.string()),
    red_cards: z.array(z.string()),
    competion_logo: z.array(z.string()),
  }),
})

export type Player = z.infer<typeof PlayerSchema>
